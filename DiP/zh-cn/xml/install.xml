<?xml version="1.0" encoding="utf-8"?>
<chapter id="install">
<?dbhtml filename="installing_python/index.html"?>
<title>安装 &python;</title>
<titleabbrev id="install.numberonly">第 1 章</titleabbrev>
<abstract>
<title/>
<para>欢迎来到 &python; 世界，让我们开始吧。在本章中，将学习适合您的 &python; 安装。</para>
</abstract>
<section id="install.choosing">
<title>哪一种 &python; 适合您？</title>
<abstract>
<title></title>
<para>学习 &python; 的第一件事就是安装，不是吗？</para>
</abstract>
<para>如果您在公网的服务器上有个用户账号，那么您的 ISP 或许已经安装了 &python;。
大多数 Linux 发行版在默认安装的情况下就已经提供了 &python;。
虽然您可能希望在苹果机上安装一个拥有类 Mac 的图形操作界面，但在 &macosx; 10.2 或更高的版本上已经包含了一个 &python; 的命令行版本。</para>
<para>&windows; 环境默认不提供任何版本的 &python;，但是不要担心！本章将提供几种 &windows; 环境下安装 &python; 的方法。</para>
<para>正像您所看到的，&python; 可以运行于很多操作系统平台。包括 &windows;、&macos;、&macosx;、所有免费的类 &unix; 变种 (如 &linux;)。也有运行于 &solaris;、&as400;、&amiga;、&os2;、&beos; 的版本，甚至是您从来没听说过的其他操作系统平台。</para>
<para>有太多的平台可以运行 &python; 了。在一种平台下编写的 &python; 程序稍作修改，就可以运行于<emphasis>任何</emphasis> 其他支持的平台。例如，我通常在 &windows; 平台上开发 &python; 程序，然后适当配置后使之能在 &linux; 平台上运行。</para>
<para>回到开始的问题，<quote>哪一种 &python; 适合您？</quote> 回答是：哪一个已经安装在您计算机上的均可。</para>
</section>
<section id="install.windows">
<?dbhtml filename="installing_python/windows.html"?>
<title>&windows; 上的 &python;</title>
<abstract>
<title/>
<para>在 &windows; 上，安装 &python; 有两种选择。</para>
</abstract>
<para>&activestate; 制作的 &activepython; 是专门针对 &windows; 的 &python; 套件，它包含了一个完整的 &python; 发布、一个适用于 &python; 编程的 &ide; 以及一些 &python; 的 &windows; 扩展，提供了全部的访问 &windows; &apis; 的服务，以及 &windows; 注册表的注册信息。</para>
<para>虽然 &activepython; 不是开源软件，但它可以自由下载。&activepython; 是我学习 &python; 时使用过的 &ide;。除非有别的原因，我建议您使用它。可能的一个原因是：&activestate; 通常要在新的 &python; 版本发布几个月以后才更新它的安装程序。如果您就需要 &python; 的最新版本，并且 &activepython; 仍然落后于最新版本的话，您应该直接跳到在 &windows; 上安装 &python; 的第二种选项。
</para>
<para>第二种选择是使用由 &python; 发布的 <quote>官方</quote> &python; 安装程序。她是可自由下载的开源软件，并且您总是可以获得当前 &python; 的最新版本。</para>
<procedure>
<title>选项 1：安装 &activepython;</title>
<para>下面描述 &activepython; 的安装过程：</para>
<step><para>从 <ulink url="&url_activepython;"/> 下载 &activepython; 。</para></step>
<step><para>如果您正在使用 &win95;、&win98; 或 &winme;，还需要在安装 &activepython; 之前下载并安装<ulink url="http://download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/InstMsiA.exe">Windows Installer 2.0</ulink> 。</para></step>
<step><para>双击安装程序 <filename>ActivePython-2.2.2-224-win32-ix86.msi</filename>。</para></step>
<step><para>按照安装程序的提示信息一步步地执行。</para></step>
<step><para>如果磁盘空间不足，您可以执行定制安装，不选文档，但是笔者不建议您这样做，除非您实在是挤不出14M空间来。
</para></step>
<step><para>在安装完后之后，关闭安装程序，打开 <menuchoice><guimenu>开始</guimenu><guimenuitem>程序</guimenuitem><guimenuitem>ActiveState ActivePython 2.2</guimenuitem><guimenuitem>PythonWin IDE</guimenuitem></menuchoice>。您将看到类似如下的信息：</para></step>
</procedure>
<informalexample>
<screen>
<computeroutput>PythonWin 2.2.2 (#37, Nov 26 2002, 10:24:37) [MSC 32 bit (Intel)] on win32.
Portions Copyright 1994-2001 Mark Hammond (mhammond@skippinet.com.au) -
see 'Help/About PythonWin' for further copyright information.</computeroutput>
&prompt;
</screen>
</informalexample>
<procedure>
<title>选项 2：安装来自 &pythonorg; 的 &python; </title>
<step><para>从 <ulink url="&url_pythondownload;"/> 选择最新的 &python; &windows; 安装程序，下载 <literal>.exe</literal> 安装文件。</para></step>
<step><para>双击安装程序 <filename>Python-2.xxx.yyy.exe</filename>。文件名依赖于您所下载的 &python; 安装程序文件。</para></step>
<step><para>按照安装程序的提示信息一步步地执行。</para></step>
<step><para>如果磁盘空间不足，可以取消 HTMLHelp 文件、实用脚本 (<filename>Tools/</filename>)、和/或测试套件 (<filename>Lib/test/</filename>)。</para></step>
<step><para>如果您没有机器的管理员权限，您可以选择 <guibutton>Advanced Options</guibutton>，然后选择 <guilabel>Non-Admin Install</guilabel>。这只会对登记注册表和开始菜单中创建的快捷方式有影响。</para></step>
<step><para>在安装完成之后，关闭安装程序，打开 <menuchoice><guimenu>开始</guimenu><guimenuitem>程序</guimenuitem><guimenuitem>Python 2.3</guimenuitem><guimenuitem>IDLE (Python GUI)</guimenuitem></menuchoice>。您将看到类似如下的信息：</para></step>
</procedure>
<informalexample>
<screen>
<computeroutput>Python 2.3.2 (#49, Oct  2 2003, 20:02:00) [MSC v.1200 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.

    ****************************************************************
    Personal firewall software may warn about the connection IDLE
    makes to its subprocess using this computer's internal loopback
    interface.  This connection is not visible on any external
    interface and no data is sent to or received from the Internet.
    ****************************************************************
    
IDLE 1.0</computeroutput>
&prompt;
</screen>
</informalexample>
</section>
<section id="install.macosx">
<?dbhtml filename="installing_python/macosx.html"?>
<title>&macosx; 上的 &python; </title>
<abstract>
<title/>
<para>在 &macosx; 上，对于安装 &python; 有两种选择：安装或不安装。您可能想要安装它。</para>
</abstract>
<para>&macosx; 10.2 及其后续版本已经预装了一个 &python; 的命令行版本。如果您习惯使用命令行，那么您可以使用它学完本书的三分之一。然而，预安装的版本不带 &xml; 解析器，所以当您学到 &xml; 的章节时，您会需要安装完整版。</para>
<para>您还可以安装优于预装版本的最新的包含图形界面 Shell 的完整版本。</para>
<procedure>
<title>在 &macosx; 上运行预装版本的 &python; </title>
<para>使用预装的 &python; 版本的步骤：</para>
<step><para>打开 <filename>/Applications</filename> 文件夹。</para></step>
<step><para>打开 <filename>Utilities</filename> 文件夹。</para></step>
<step><para>双击 <filename>Terminal</filename> 打开一个终端进入命令行窗口。</para></step>
<step><para>在提示符下键入 <userinput>python</userinput>。</para></step>
</procedure>
<para>试验:</para>
<informalexample>
<!--<title>Using the pre-installed version of &python; on &macosx;</title>-->
<screen>
<computeroutput>Welcome to Darwin!</computeroutput>
<prompt>[localhost:~] you% </prompt><userinput>python</userinput>
<computeroutput>Python 2.2 (#1, 07/14/02, 23:25:09)
[GCC Apple cpp-precomp 6.14] on darwin
Type "help", "copyright", "credits", or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to get back to the command prompt]</userinput>
<prompt>[localhost:~] you% </prompt>
</screen>
</informalexample>
<procedure>
<title>在 &macosx; 上安装最新版的 &python; </title>
<para>下面介绍下载并安装 &python; 最新版本的过程:</para>
<step><para>从 <ulink url="&url_mac;"/> 下载 <filename>MacPython-OSX</filename> 磁盘镜像 。</para></step>
<step><para>下载完毕，双击 <filename>MacPython-OSX-2.3-1.dmg</filename> 将磁盘镜像挂载到桌面。</para></step>
<step><para>双击安装程序 <filename>MacPython-OSX.pkg</filename>.</para></step>
<step><para>安装程序将提示要求您的管理员用户名和口令。</para></step>
<step><para>按照安装程序的提示一步步执行。</para></step>
<step><para>安装完毕后，关闭安装程序，打开 <filename>/Applications</filename> 文件夹。</para></step>
<step><para>打开 <filename>MacPython-2.3</filename> 文件夹。</para></step>
<step><para>双击 <filename>PythonIDE</filename> 来运行 &python; 。</para></step>
</procedure>
<para>&macpython; &ide; 将显示启动画面将您带进交互 shell。如果交互 shell 没有出现，选择 <menuchoice><shortcut><keycombo><keycap>Cmd</keycap><keysym>0</keysym></keycombo></shortcut><guimenu>Window</guimenu><guimenuitem>Python Interactive</guimenuitem></menuchoice>。您将看到类似如下的信息:</para>
<informalexample>
<!--<title>The &macpython; &ide; on &macosx;</title>-->
<screen>
<computeroutput>Python 2.3 (#2, Jul 30 2003, 11:45:28)
[GCC 3.1 20020420 (prerelease)]
Type "copyright", "credits" or "license" for more information.
MacPython IDE 1.0.1</computeroutput>
&prompt;
</screen>
</informalexample>
<para>
请注意，安装完最新版本后，预装版本仍然存在。如果您从命令行运行脚本，那您需要知道正在使用的是哪一个版本的 &python; 。
</para>
<example>
<title>两个 &python; 版本</title>
<screen>
<prompt>[localhost:~] you% </prompt><userinput>python</userinput>
<computeroutput>Python 2.2 (#1, 07/14/02, 23:25:09)
[GCC Apple cpp-precomp 6.14] on darwin
Type "help", "copyright", "credits", or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to get back to the command prompt]</userinput>
<prompt>[localhost:~] you% </prompt><userinput>/usr/local/bin/python</userinput>
<computeroutput>Python 2.3 (#2, Jul 30 2003, 11:45:28)
[GCC 3.1 20020420 (prerelease)] on darwin
Type "help", "copyright", "credits", or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to get back to the command prompt]</userinput>
<prompt>[localhost:~] you% </prompt>
</screen>
</example>
</section>
<section id="install.macos9">
<?dbhtml filename="installing_python/macos9.html"?>
<title>&macos9; 上的 &python; </title>
<abstract>
<title/>
<para>&macos9; 上没有预装任何版本的 &python;，安装相对简单，只有一种选择。</para>
</abstract>
<procedure>
<!--<title>Installing on &macos9;</title>-->
<para>下面介绍在 &macos9; 上安装 &python; 的过程:</para>
<step><para>从 <ulink url="&url_mac;"/> 下载 <filename>MacPython23full.bin</filename>。</para></step>
<step><para>如果浏览器不能自动解压文件，那么双击 <filename>MacPython23full.bin</filename> 用 <application>Stuffit Expander</application> 解压。</para></step>
<step><para>双击安装程序 <filename>MacPython23full</filename>。</para></step>
<step><para>按照安装程序的提示一步步执行。</para></step>
<step><para>安装完毕后，关闭安装程序，打开 <filename>/Applications</filename> 文件夹。</para></step>
<step><para>打开 <filename>MacPython-OS9 2.3</filename> 文件夹。</para></step>
<step><para>双击 <filename>PythonIDE</filename> 来运行 &python; 。</para></step>
</procedure>
<para>&macpython; &ide; 将显示启动画面将您带进交互 shell。如果交互 shell 没有出现，选择 <menuchoice><shortcut><keycombo><keycap>Cmd</keycap><keysym>0</keysym></keycombo></shortcut><guimenu>Window</guimenu><guimenuitem>Python Interactive</guimenuitem></menuchoice>。您将看到类似如下的信息:</para>
<informalexample>
<!--<title>The &macpython; &ide; on &macos9;</title>-->
<screen>
<computeroutput>Python 2.3 (#2, Jul 30 2003, 11:45:28)
[GCC 3.1 20020420 (prerelease)]
Type "copyright", "credits" or "license" for more information.
MacPython IDE 1.0.1</computeroutput>
&prompt;
</screen>
</informalexample>
</section>
<section id="install.redhat">
<?dbhtml filename="installing_python/redhat.html"?>
<title>&redhatlinux; 上的 &python; </title>
<para>在类 &unix; 的操作系统 (如 &linux;) 上安装二进制包很容易。预编译好的二进制包对大多数 &linux; 发行版是可用的。或者您可以通过源码进行编译。</para>
<abstract>
<title/>
<para>在 <ulink url="&url_pythondownload;"/> 选择列出的最新的版本号, 然后选择
其中的<filename>rpms/</filename> 目录下载最新的 &python; &rpm; 包。
使用 <command>rpm</command> 命令进行安装，操作如下所示:</para>
</abstract>
<example>
<title>在 &redhat9; 上安装</title>
<screen>
<prompt>localhost:~$ </prompt><userinput>su -</userinput>
<prompt>Password: </prompt><userinput>[enter your root password]</userinput>
<prompt>[root@localhost root]# </prompt><userinput>wget http://python.org/ftp/python/2.3/rpms/redhat-9/python2.3-2.3-5pydotorg.i386.rpm</userinput>
<computeroutput>Resolving python.org... done.
Connecting to python.org[194.109.137.226]:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 7,495,111 [application/octet-stream]
...</computeroutput>
<prompt>[root@localhost root]# </prompt><userinput>rpm -Uvh python2.3-2.3-5pydotorg.i386.rpm</userinput>
<computeroutput>Preparing...                ########################################### [100%]
   1:python2.3              ########################################### [100%]</computeroutput>
<prompt>[root@localhost root]# </prompt><userinput>python</userinput>          <co id="install.unix.1.1"/>
<computeroutput>Python 2.2.2 (#1, Feb 24 2003, 19:13:11)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-4)] on linux2
Type "help", "copyright", "credits", or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to exit]</userinput>
<prompt>[root@localhost root]# </prompt><userinput>python2.3</userinput>       <co id="install.unix.1.2"/>
<computeroutput>Python 2.3 (#1, Sep 12 2003, 10:53:56)
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits", or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to exit]</userinput>
<prompt>[root@localhost root]# </prompt><userinput>which python2.3</userinput> <co id="install.unix.1.3"/>
<computeroutput>/usr/bin/python2.3</computeroutput>
</screen>
<calloutlist>
<callout arearefs="install.unix.1.1">
<para>仅仅键入 <userinput>python</userinput> 运行的是老版本的 &python; ――它是缺省安装的版本。它不是我们想要的。</para>
</callout>
<callout arearefs="install.unix.1.2">
<para>截止到笔者写作时，新的版本是 <userinput>python2.3</userinput>。您可能会需要修改示例脚本的第一行的路径指向新版本。</para>
</callout>
<callout arearefs="install.unix.1.3">
<para>这是我们刚安装的 &python; 新版本的全路径。在 <literal>#!</literal> 行中 (每个脚本的第一行) 使用它来确保脚本运行在最新版的 &python; 下，并且确保敲入的是 <userinput>python2.3</userinput> 进入交互shell。</para>
</callout>
</calloutlist>
</example>
</section>
<section id="install.debian">
<?dbhtml filename="installing_python/debian.html"?>
<title>&debiangnulinux; 上的 &python; </title>
<abstract>
<title/>
<para>如果您运行在 &debiangnulinux; 上，安装 &python; 需要使用 <command>apt</command> 命令。</para>
</abstract>
<example>
<title>在 &debiangnulinux; 上安装</title>
<screen>
<prompt>localhost:~$ </prompt><userinput>su -</userinput>
<prompt>Password: </prompt><userinput>[enter your root password]</userinput>
<prompt>localhost:~# </prompt><userinput>apt-get install python</userinput>
<computeroutput>Reading Package Lists... Done
Building Dependency Tree... Done
The following extra packages will be installed:
  python2.3
Suggested packages:
  python-tk python2.3-doc
The following NEW packages will be installed:
  python python2.3
0 upgraded, 2 newly installed, 0 to remove and 3 not upgraded.
Need to get 0B/2880kB of archives.
After unpacking 9351kB of additional disk space will be used.</computeroutput>
<prompt>Do you want to continue? [Y/n] </prompt><userinput>Y</userinput>
<computeroutput>Selecting previously deselected package python2.3.
(Reading database ... 22848 files and directories currently installed.)
Unpacking python2.3 (from .../python2.3_2.3.1-1_i386.deb) ...
Selecting previously deselected package python.
Unpacking python (from .../python_2.3.1-1_all.deb) ...
Setting up python (2.3.1-1) ...
Setting up python2.3 (2.3.1-1) ...
Compiling python modules in /usr/lib/python2.3 ...
Compiling optimized python modules in /usr/lib/python2.3 ...</computeroutput>
<prompt>localhost:~# </prompt><userinput>exit</userinput>
<computeroutput>logout</computeroutput>
<prompt>localhost:~$ </prompt><userinput>python</userinput>
<computeroutput>Python 2.3.1 (#2, Sep 24 2003, 11:39:14)
[GCC 3.3.2 20030908 (Debian prerelease)] on linux2
Type "help", "copyright", "credits" or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to exit]</userinput>
</screen>
</example>
</section>
<section id="install.source">
<?dbhtml filename="installing_python/source.html"?>
<title>从源代码安装 &python; </title>
<abstract>
<title/>
<para>如果您宁愿从源码创建，可以从 <ulink url="&url_pythondownload;"/>下载 &python; 的源代码。选择最新的版本，下载<filename>.tgz</filename> 文件，执行通常的 <userinput>configure</userinput>, <userinput>make</userinput>, <userinput>make install</userinput> 步骤。</para>
</abstract>
<example>
<title>从源代码安装</title>
<screen>
<prompt>localhost:~$ </prompt><userinput>su -</userinput>
<prompt>Password: </prompt><userinput>[enter your root password]</userinput>
<prompt>localhost:~# </prompt><userinput>wget http://www.python.org/ftp/python/2.3/Python-2.3.tgz</userinput>
<computeroutput>Resolving www.python.org... done.
Connecting to www.python.org[194.109.137.226]:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 8,436,880 [application/x-tar]
...</computeroutput>
<prompt>localhost:~# </prompt><userinput>tar xfz Python-2.3.tgz</userinput>
<prompt>localhost:~# </prompt><userinput>cd Python-2.3</userinput>
<prompt>localhost:~/Python-2.3# </prompt><userinput>./configure</userinput>
<computeroutput>checking MACHDEP... linux2
checking EXTRAPLATDIR...
checking for --without-gcc... no
...</computeroutput>
<prompt>localhost:~/Python-2.3# </prompt><userinput>make</userinput>
<computeroutput>gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-I. -I./Include  -DPy_BUILD_CORE -o Modules/python.o Modules/python.c
gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-I. -I./Include  -DPy_BUILD_CORE -o Parser/acceler.o Parser/acceler.c
gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-I. -I./Include  -DPy_BUILD_CORE -o Parser/grammar1.o Parser/grammar1.c
...</computeroutput>
<prompt>localhost:~/Python-2.3# </prompt><userinput>make install</userinput>
<computeroutput>/usr/bin/install -c python /usr/local/bin/python2.3
...</computeroutput>
<prompt>localhost:~/Python-2.3# </prompt><userinput>exit</userinput>
<computeroutput>logout</computeroutput>
<prompt>localhost:~$ </prompt><userinput>which python</userinput>
<computeroutput>/usr/local/bin/python</computeroutput>
<prompt>localhost:~$ </prompt><userinput>python</userinput>
<computeroutput>Python 2.3.1 (#2, Sep 24 2003, 11:39:14)
[GCC 3.3.2 20030908 (Debian prerelease)] on linux2
Type "help", "copyright", "credits" or "license" for more information.</computeroutput>
&prompt;<userinput>[press Ctrl+D to get back to the command prompt]</userinput>
<prompt>localhost:~$ </prompt>
</screen>
</example>
</section>
<section id="install.shell">
<?dbhtml filename="installing_python/shell.html"?>
<title>使用 &python; 的交互 Shell</title>
<abstract>
<title/>
<para>既然我们已经安装了 &python;，那么我们运行的这个交互 shell 是什么东西呢？</para>
</abstract>
<para>&python; 扮演着两种角色。首先它是一个脚本解释器，可以从命令行运行脚本，也可以在脚本上双击，像运行其他应用程序一样。它还是一个交互 shell，可以执行任意的语句和表达式。这一点对调试、快速组建和测试相当有用。我甚至知道一些人把 &python; 的交互 shell 当作计算器来使用！
</para>
<para>在您的计算机平台上启动 &python; 的交互 shell，接下来让我们尝试着做些操作：</para>
<example>
<title>初次使用交互 Shell</title>
<screen>
&prompt;<userinput>1 + 1</userinput>               <co id="install.shell.1.1"/>
<computeroutput>2</computeroutput>
&prompt;<userinput>print 'hello world'</userinput> <co id="install.shell.1.2"/>
<computeroutput>hello world</computeroutput>
&prompt;<userinput>x = 1</userinput>               <co id="install.shell.1.3"/>
&prompt;<userinput>y = 2</userinput>
&prompt;<userinput>x + y</userinput>
<computeroutput>3</computeroutput>
</screen>
<calloutlist>
<callout arearefs="install.shell.1.1">
<para>&python; 的交互 shell 可以计算任意的 &python; 表达式，包括任何基本的数学表达式。</para>
</callout>
<callout arearefs="install.shell.1.2">
<para>交互 shell 可以执行任意的 &python; 语句，包括 <command>print</command> 语句。</para>
</callout>
<callout arearefs="install.shell.1.3">
<para>也可以给变量赋值，并且变量值在 shell 打开时一直有效 (一旦关毕交互 Sheel，变量值将丢失)。</para>
</callout>
</calloutlist>
</example>
</section>
<section id="install.summary">
<?dbhtml filename="installing_python/summary.html"?>
<title>小结</title>
<abstract>
<title/>
<para>您现在应该已经安装了一个可以工作的 &python; 版本了。</para>
</abstract>
<para>
根据您的运行平台，您可能安装有不止一个 &python; 版本。那样的话，您需要知道 &python; 的路径。若在命令行简单地键入 <command>python</command> 没有运行您想使用的 &python; 版本，则需要输入想要的版本的全路径。
</para>
<para>最后祝贺您，欢迎来到 &python; 世界。</para>
</section>
</chapter>
